{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","id","name","email","CardList","robots","CardComponent","map","user","i","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAACC,GACV,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAAMI,GAAhC,cACpB,gCACI,6BAAKJ,EAAMK,OACX,4BAAIL,EAAMM,eCQXC,EAbE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACVC,EAAgBD,EAAOE,KAAK,SAACC,EAAKC,GACpC,OAAO,cAAC,EAAD,CAAcR,GAAII,EAAOI,GAAGR,GAAIC,KAAMG,EAAOI,GAAGP,KAAMC,MAAOE,EAAOI,GAAGN,OAA5DM,MAItB,OACI,8BACGH,KCGII,EAZG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKd,UAAU,MAAf,SACI,uBAAOA,UAAU,mCACjBe,KAAK,SACLC,YAAY,mBACZC,SAAUH,OCGPI,EARA,SAACnB,GACZ,OACI,qBAAKoB,MAAO,CAACC,UAAY,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACKvB,EAAMwB,YCiBJC,E,kDApBX,WAAYzB,GAAO,IAAD,8BACd,cAAMA,IACD0B,MAAQ,CACTC,UAAW,GAHD,E,qDAOlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAW,M,oBAG9B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,2DAEAG,KAAK9B,MAAMwB,a,GAhBFQ,aCiDbC,G,wDA1CX,aAAe,IAAD,8BACV,gBAaJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAACjB,YAAaqB,EAAMC,OAAOC,SAbzC,EAAKX,MAAQ,CACTlB,OAAQ,GACRM,YAAa,IAJP,E,qDAQd,WAAqB,IAAD,OAChBwB,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAU,EAAKX,SAAS,CAACvB,OAASkC,S,oBAOhD,WAAU,IAAD,OACCC,EAAiBb,KAAKJ,MAAMlB,OAAOoC,QAAO,SAAAC,GAC5C,OAAOA,EAAMxC,KAAKyC,cAAcC,SAAS,EAAKrB,MAAMZ,YAAYgC,kBAGpE,OAAgC,IAA7BhB,KAAKJ,MAAMlB,OAAOwC,OACT,oBAAI/C,UAAU,KAAd,qBAGJ,sBAAKA,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWc,aAAce,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU1B,OAAQmC,e,GAlC5BX,cCKHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.18e4057d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='photo' src={`https://robohash.org/${props.id}?200x200`}/>\r\n            <div>\r\n                <h3>{props.name}</h3>\r\n                <p>{props.email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import react from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => { // destructuring of the properties\r\n    const CardComponent = robots.map( (user,i) => {\r\n        return <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email} />\r\n    })\r\n\r\n    //if(true) throw new Error;\r\n    return (\r\n        <div>\r\n          {CardComponent}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import react from 'react';\r\n\r\nconst SearchBox = ({searchField, searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input className='pa3 ba b--green bg-lightest-blue'\r\n            type='search' \r\n            placeholder='Search robots...'\r\n            onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import react from 'react';\r\n\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY : 'scroll', border: '1px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n        ); // because it has children inside\r\n}\r\n\r\nexport default Scroll;","import react, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError : false\r\n        };\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({hasError : true});\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError){\r\n            return <h1>Oooops. This is not good!</h1>\r\n        } else {\r\n            return this.props.children;\r\n        }\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import react, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\r\n    constructor() {\r\n        super(); // necessary to use this.\r\n        this.state = { // state is what changes in the app and should always be in the parent component\r\n            robots: [],\r\n            searchField: ''\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => {this.setState({robots : users})});\r\n    }\r\n\r\n    onSearchChange = (event) => { // always this syntax or this will not refer to parent class, but to where it's called\r\n        this.setState({searchField: event.target.value});\r\n    }\r\n\r\n    render() {\r\n        const filteredRobots = this.state.robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(this.state.searchField.toLowerCase());\r\n        })\r\n\r\n        if(this.state.robots.length === 0){\r\n            return (<h1 className='tc'>LOADING</h1>)\r\n        } else {\r\n            return (\r\n                <div className='tc'>\r\n                    <h1 className='f1'>RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundary>\r\n                            <CardList robots={filteredRobots}/>\r\n                        </ErrorBoundary>\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}